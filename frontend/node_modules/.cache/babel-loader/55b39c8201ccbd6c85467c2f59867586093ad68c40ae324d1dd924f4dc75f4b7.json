{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nconst UseFetch = (initialurl = '') => {\n  _s();\n  const [url, setUrl] = useState(initialurl);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const res = await fetch(url);\n        const json = await res.json();\n        setData(json);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n    if (url) {\n      fetchData();\n    }\n  }, [url]);\n  const doFetch = url => {\n    setUrl(url);\n  };\n  return {\n    loading,\n    error,\n    data,\n    doFetch\n  };\n};\n_s(UseFetch, \"x2dVxRdyEZIArxVT8A/JKx3hGkY=\");\n_c = UseFetch;\nexport default UseFetch;\nvar _c;\n$RefreshReg$(_c, \"UseFetch\");","map":{"version":3,"names":["useEffect","useState","UseFetch","initialurl","_s","url","setUrl","data","setData","error","setError","loading","setLoading","fetchData","res","fetch","json","doFetch","_c","$RefreshReg$"],"sources":["C:/weather-app/frontend/src/Hook/useFetch.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\n\r\nconst UseFetch = (initialurl = '') => {\r\n    const [url, setUrl] = useState(initialurl);\r\n    const [data, setData] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true)\r\n\r\n            try {\r\n                const res = await fetch(url)\r\n                const json = await res.json()\r\n\r\n                setData(json)\r\n                setLoading(false)\r\n\r\n            } catch (error) {\r\n                setError(error)\r\n                setLoading(false)\r\n            }\r\n        };\r\n        if (url) {\r\n            fetchData();\r\n        }\r\n\r\n    }, [url]);\r\n\r\n    const doFetch = (url) => {\r\n        setUrl(url);\r\n    }\r\n\r\n    return { loading, error, data, doFetch }\r\n}\r\n\r\n\r\n\r\nexport default UseFetch\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAG3C,MAAMC,QAAQ,GAAGA,CAACC,UAAU,GAAG,EAAE,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGL,QAAQ,CAACE,UAAU,CAAC;EAC1C,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAG5CD,SAAS,CAAC,MAAM;IACZ,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1BD,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAI;QACA,MAAME,GAAG,GAAG,MAAMC,KAAK,CAACV,GAAG,CAAC;QAC5B,MAAMW,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;QAE7BR,OAAO,CAACQ,IAAI,CAAC;QACbJ,UAAU,CAAC,KAAK,CAAC;MAErB,CAAC,CAAC,OAAOH,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAAC;QACfG,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IACD,IAAIP,GAAG,EAAE;MACLQ,SAAS,CAAC,CAAC;IACf;EAEJ,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EAET,MAAMY,OAAO,GAAIZ,GAAG,IAAK;IACrBC,MAAM,CAACD,GAAG,CAAC;EACf,CAAC;EAED,OAAO;IAAEM,OAAO;IAAEF,KAAK;IAAEF,IAAI;IAAEU;EAAQ,CAAC;AAC5C,CAAC;AAAAb,EAAA,CAlCKF,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AAsCd,eAAeA,QAAQ;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}